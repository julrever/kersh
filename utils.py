from requests_html import HTMLSession
import urllib
import random
from config import *


def send_menu(bot, chat_id):
    weekday = datetime.datetime.today().weekday()
    today = str(datetime.datetime.today().date())
    if weekday == 5 or weekday == 6:
        bot.send_message(chat_id, 'not today')
    else:
        try:
            img = open(today + '.jpg', 'rb')
        except:
            session = HTMLSession()
            r = session.get('http://art-afrika.ru/lunch/')
            pic = r.html.find('#dle-content', first=True).find('a', first=True).attrs['href']
            f = open('africa/' + today + '.jpg', 'wb')
            f.write(urllib.request.urlopen(pic).read())
            f.close()
            img = open('africa/' + today + '.jpg', 'rb')
    bot.send_photo(chat_id, img)
    img.close()


def till_tea(bot, message):
    weekday = datetime.datetime.today().weekday()
    skoka = '—á—É—á—É—Ç—å'
    if weekday == 5 or weekday == 6:
        bot.send_message(message.chat.id, '–î–æ –≤–µ—á–µ—Ä–Ω–µ–≥–æ —á–∞—è –µ—â–µ —Å–æ–≤—Å–µ–º –Ω–µ—á—É—á—É—Ç—å')
    else:
        time = datetime.datetime.now(datetime.timezone.utc).strftime(TIME_FORMAT)
        now_time = datetime.datetime.strptime(str(time), TIME_FORMAT)
        if TEA_TIME > now_time:
            remains = int((TEA_TIME - now_time).seconds / 60)
        else:
            remains = int((now_time - TEA_TIME).seconds / 60 * -1)
            if remains < -60:
                remains = 24*60 + remains
                if weekday == 4:
                    bot.send_message(message.chat.id, '–î–æ –≤–µ—á–µ—Ä–Ω–µ–≥–æ —á–∞—è –µ—â–µ —Å–æ–≤—Å–µ–º –Ω–µ—á—É—á—É—Ç—å')
                    pass
        if remains > 120:
            skoka = '–Ω–µ—á—É—á—É—Ç—å'
        if remains > 0:
            bot.send_message(message.chat.id, '–î–æ –≤–µ—á–µ—Ä–Ω–µ–≥–æ —á–∞—è –æ—Å—Ç–∞–ª–æ—Å—å ' + skoka +
                         ' (' + str(remains) + ' –º–∏–Ω.)')
        else:
            remains = str(-1 * remains)
            late_text = ('–í—ã –æ—Ö—É–µ–ª–∏ —Ç—É—Ç –≤—Å–µ? –£–∂–µ ' + remains + ' –º–∏–Ω. –∫–∞–∫ —á–∞–π. –ú–¥–∞, –ø–∏–∑–¥–µ—Ü.',
                         '–ê–ª–æ, —á–∞–π –±—ã–ª ' + remains + ' –º–∏–Ω. –Ω–∞–∑–∞–¥',
                         '–ß–∞–π —Ç–æ –ø–∏—Ç—å –ø–æ–π–¥–µ–º? –£–∂–µ ' + remains + ' –º–∏–Ω. –∫–∞–∫ —á–∞–π.',
                         '–ö—Ö–º-–∫—Ö–º, —á–∞–π. ' + remains + ' –º–∏–Ω. —É–∂–µ')
            bot.send_message(message.chat.id, random.choice(late_text))


def need_support(bot, message):
    options = [send_supportive_sticker, send_puppies, send_support]
    random.choice(options)(bot, message)


def send_puppies(bot, message):
    support_img = open('support.jpg', 'rb')
    bot.send_photo(message.chat.id, support_img)
    support_img.close()


def send_support(bot, message):
    support = ['–Ω—É-–Ω—É', '–≤—Å—ë —Ö–æ—Ä–æ—à–æ –±—É–¥–µ—Ç']
    bot.send_message(message.chat.id, random.choice(support))


def send_supportive_sticker(bot, message):
    stickers = ['CAADAgADXgADVy4jC1_xeIKnUJcvAg',  # –¥–µ—Ä–∂–∏—Å—å –º–∞–ª—ã—à–∫–∞
                'CAADAgAD5w8AAujW4hKTEOfr_aLUEQI',  # how amazing you are
                'CAADAgAD3A8AAujW4hKu4tX6RHk6rAI',  # ur cute
                'CAADAgAD1g8AAujW4hLiymAhix9KpAI']  # boop
    bot.send_sticker(message.chat.id, random.choice(stickers))


def naruto(bot, message):
    bot.send_message(message.chat.id, '–°–æ–±–∞–∫–∏, —è ‚Äî –ù–∞—Ä—É—Ç–æ –£–∑—É–º–∞–∫–∏')
    bot.send_message(message.chat.id, '–î–∞, –∏, –∫—Å—Ç–∞—Ç–∏, —è ‚Äî –±—É–¥—É—â–∏–π –•–æ–∫–∞–≥–µ')
    bot.send_message(message.chat.id, '–£ –º–µ–Ω—è –≤—Å—ë –∫—Ä—É—Ç–æ, —è –∂–µ –≤—Å—ë-—Ç–∞–∫–∏ –ù–∞—Ä—É—Ç–æ')
    bot.send_message(message.chat.id, '–ù–µ–Ω–∞–≤–∏–∂—É –û—Ä–æ—á–∏–º–∞—Ä—É –∏ –ö–∞–±—É—Ç–æ')
    bot.send_message(message.chat.id, '–ó–Ω–∞—é –º–Ω–æ–≥–æ –¥–∂—É—Ç—Å—É, –Ω–µ–Ω–∞–≤–∏–∂—É –±—É—Ç—Å—ã')
    bot.send_message(message.chat.id, '–õ—É—á—à–µ –∫–ª–æ–Ω–æ–≤, –†–∞—Å–µ–Ω–≥–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥—É—Ç—Å—è ')
    bot.send_message(message.chat.id, '–£ –º–µ–Ω—è —Ñ–∞–Ω–∞—Ç—ã, –ø–ª—é—Å —è –ª—é–±–ª—é –•–∏–Ω–∞—Ç—É')
    bot.send_message(message.chat.id, '–ù–µ–º–∞–ª–æ –¥—Ä—É–∑–µ–π, –∏ –æ–¥–Ω–æ–∫–æ–º–Ω–∞—Ç–Ω–∞—è —Ö–∞—Ç–∞')


def get_weather_today(bot, message):
    session = HTMLSession()
    r = session.get('https://sinoptik.com.ru/%D0%BF%D0%BE%D0%B3%D0%BE%D0%B4%D0%B0-%D1%81%D0%B0%D0%BD%D0%BA%D1%82'
                    '-%D0%BF%D0%B5%D1%82%D0%B5%D1%80%D0%B1%D1%83%D1%80%D0%B3')
    temperature_today = r.html.xpath('/html/body/div[3]/div[2]/div[1]/div[1]/div/div[1]/div[2]/div[2]')
    condition_today = r.html.xpath('/html/body/div[3]/div[2]/div[1]/div[1]/div/div[1]/div[2]/div[1]', first=True)
    text = condition_today.attrs['title'] + '\n'
    for t in temperature_today:
        text += t.text
    bot.send_message(message.chat.id, set_emoji_weather(text) + text)


def get_weather_tomorrow(bot, message):
    session = HTMLSession()
    r = session.get('https://sinoptik.com.ru/%D0%BF%D0%BE%D0%B3%D0%BE%D0%B4%D0%B0-%D1%81%D0%B0%D0%BD%D0%BA%D1%82'
                    '-%D0%BF%D0%B5%D1%82%D0%B5%D1%80%D0%B1%D1%83%D1%80%D0%B3')
    temperature_tomorrow = r.html.xpath('/html/body/div[3]/div[2]/div[1]/div[1]/div/div[1]/div[4]/div[2]')
    condition_tomorrow = r.html.xpath('/html/body/div[3]/div[2]/div[1]/div[1]/div/div[1]/div[4]/div[1]', first=True)
    text = condition_tomorrow.attrs['title'] + '\n'
    for t in temperature_tomorrow:
        text += t.text
    bot.send_message(message.chat.id, set_emoji_weather(text) + text)


def set_emoji_weather(text):
    text = text.lower()
    res = ''
    if '—è—Å–Ω–æ' in text:
        res += '‚òÄÔ∏è'
    if '–æ–±–ª–∞—á–Ω–æ' in text:
        res += '‚õÖÔ∏è'
    if '–¥–æ–∂–¥—å' in text:
        res += 'üåß'
    if '—Å–Ω–µ–≥' in text:
        res += '‚ùÑÔ∏è'
    return res


def where_to_eat(bot, message):
    bot.send_message(message.chat.id, random.choice(PLACES_TO_EAT))
